//this keyword
const student = {
    name: 'Mohit',
    phy: 12,
    chem:14,
    mth:21,
    getavg(){
        //let avg = (phy+chem+mth)/3;  //function can never directly access the variables
        //therefore we use this keyword
        let avg = (this.phy+this.chem+this.mth)/3
        console.log(avg);
        console.log('${this.name} got avg marks = ${avg}' )
    }
}

//trycatch
try {
    console.log(a)
} catch (error) {
    console.log("variable doesnt exist")
}

Arrow functions 

const func =(args1, args2) => {function definition}

const sum=(a,b)=>{
    console.log(a+b);
}

sum(213,312)


arrow funciton implicit return


const mul=(a,b)=>( // // these () will be used here 
    a*b
)

console.log(mul(2,4))

-----------------------------

//Set timeout 

// setTimeout(function,timeout) // //function - callback and timeout takes time in ms

console.log('hello world')

setTimeout(()=>{
    console.log('Enchant')    // will take 4 seconds and will come after welcome to
},4000)
console.log('welcome to')


//set interval 

// setInterval(function, timeout) // //timeout in ms
setInterval(()=>{
    console.log('mohit dev tomar')  
},4000)            

keeps on printing mohit dev tomar every 4000 seconds 
to stop the interval for going infitetimes we give it a id 

let id = setInterval(()=>{
    console.log('mohit dev tomar')  
},4000) 

console.log(id)


clearInterval(id)  //stops the interval 



